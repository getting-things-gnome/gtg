===========
Version 0.6
===========

GTG 0.6 brings even more performance improvements, bug fixes,
the introduction of the CalDAV synchronization service, 
the new Gamify plugin, and a redesign of the Tag Editor. 

New Features:

 ‚Ä¢ CalDAV is a calendaring protocol that allows a client to access items 
   from a server. GTG now provides support for this standard, and with this new sync 
   service, you can manage all your tasks in one place.
 ‚Ä¢ New CalDAV backends are available, and the backends dialog is available again.
 ‚Ä¢ The new Gamify plugin adds a game aspect to your GTG workflow, 
   such as the ability to set task targets and task completion streaks.
 ‚Ä¢ The Tag Editor was completely redesigned.
 ‚Ä¢ Added support for undo/redo actions in the Task Editor.
 ‚Ä¢ Added the ability to collapse and expand all tasks in the main menu.
 ‚Ä¢ Added the F10 shortcut to open the main menu.
 ‚Ä¢ ESC now closes the calendar picker window.
 ‚Ä¢ Added the CTRL+B shortcut to set focus on the sidebar.
 ‚Ä¢ Added an option to set the due date to "today" in the context menu.
 ‚Ä¢ Added a unified "Reopen" action for closed tasks.
 
 Backend, Code Quality, and Performance Improvements:
 
 ‚Ä¢ Made task expansion more efficient (prevents the maximum recursion depth error).
 ‚Ä¢ Made an improvement to avoid infinite loops when entering invalid 
   dates in the Quick Add dialog.
 ‚Ä¢ Made an update to prevent errors when no task is selected.
 ‚Ä¢ Removed some deprecation warnings.
 ‚Ä¢ Added StartupWMClass to make pinning on KDE work.
 ‚Ä¢ Used application ID as the window icon (so KDE shows the correct icon).
 ‚Ä¢ Made several changes in preparation for Gtk 4.0, as well as updated 
   a number of deprecated GTK-related items.
 ‚Ä¢ Made a ton of PEP8 and style fixes.
 ‚Ä¢ Refactored the date class.
 ‚Ä¢ Updated the ability to render tag icons better on HiDPI.
 ‚Ä¢ Introduced an exception popup (i.e., a dialog that comes up when there‚Äôs an error).
 ‚Ä¢ Updated the anonymize script.
 ‚Ä¢ Added gtg://TASK-ID to the command-line help.
 ‚Ä¢ Added the -p parameter for profiling in debug.sh.
 
Bug Fixes:
 
 ‚Ä¢ Made a change to save a task before creating a parent. 
   This prevents an error that appeared when a task title would be reset 
   after adding a parent.
 ‚Ä¢ Fixed an issue with tasks losing their status during restart.
 ‚Ä¢ Fixed an issue where tags were being duplicated.
 ‚Ä¢ Fixed an issue where tags and saved searches with the same name were 
    being considered duplicates.
 ‚Ä¢ Fixed a bug where every editor window would come back if GTG wasn‚Äôt 
    closed cleanly (i.e., shut down).
 ‚Ä¢ Made several fixes for scripts.
 ‚Ä¢ Fixed certain main menu entries not being selectable via the keyboard.
 ‚Ä¢ Fixed the cut-off when you expand the columns too much.
  
Documentation Updates:

 ‚Ä¢ Added documentation to the Contributor Docs for contributing to the User Manual 
   (i.e., for writing help files).
 ‚Ä¢ Added information about using flamegraph for profiling GTG for 
   performance documentation (in the Contributor Docs).
 ‚Ä¢ Updated the user manual for this release.

For details on all of these new features, improvements, and fixes,
see the release's milestone: https://github.com/getting-things-gnome/gtg/milestone/4. 

===========
Version 0.5
===========
These are abbreviated release notes.
See https://fortintam.com/blog/gtg-0-5-released for complete release notes.

GTG 0.5 brings many user experience refinements, bugfixes,
a completely revamped file format and task editor,
and a couple of notable performance improvements.

It requires liblarch 3.1 to benefit from some of the optimizations.

Performance improvements include:

 ‚Ä¢ Much faster startup time
 ‚Ä¢ Much faster switching between tags
 ‚Ä¢ Much more efficient (and faster) live searching
 ‚Ä¢ Less UI micro-freezes (if at all) when editing tasks
 ‚Ä¢ Much faster read/write operations on the file format

Among new features, you can find:

 ‚Ä¢ Recurring (repeating) tasks
 ‚Ä¢ A much wider choice of emblems for your tags, as they now use emojis
 ‚Ä¢ Much improved visual representation of contents in the task editor
 ‚Ä¢ Support for sub-headings in the task editor
 ‚Ä¢ The resurrection of the Hamster plugin
 ‚Ä¢ Dark mode

See the blog post mentioned above for more.

===========
Version 0.4
===========
These are abbreviated release notes.
See https://fortintam.com/blog/gtg-0-4-released for complete release notes.

The much-awaited 0.4 release of Getting Things GNOME (‚ÄúGTG‚Äù) is a major overhaul
that brings together many updates and enhancements, including new features, a
modernized user interface and updated underlying technology (fully ported to
Python 3, GTK 3, and GObject introspection). GTG itself has undergone over 630
changes affecting over 500 files, and received hundreds of bug fixes, as can be
seen on https://launchpad.net/gtg/+milestone/0.4 and
https://github.com/getting-things-gnome/gtg/milestones

The UI has been updated to follow the current GNOME HIG and design patterns:
 ‚Ä¢ Client-side window decorations using the GTK HeaderBar widget.
   Along with the removal of the menu bars, this saves a significant amount
   of space and allows for more content to be displayed on screen.
 ‚Ä¢ The Preferences dialog was redesigned, and its contents cleaned up to remove
   obsolete settings (https://github.com/getting-things-gnome/gtg/pull/227).
 ‚Ä¢ All windows are properly parented (set as transient) with the main window,
   so that they can be handled better by window managers.
 ‚Ä¢ Symbolic icons are available throughout the UI.
 ‚Ä¢ Improvements to padding and borders are visible throughout the application.

New Features
 ‚Ä¢ You can now open (or create) a task‚Äôs parent task.
 ‚Ä¢ You can now select multiple closed tasks and perform bulk actions on them.
 ‚Ä¢ You can now rename or delete tags by right-clicking them in the main window.
 ‚Ä¢ You can automatically generate and assign tag colors.
 ‚Ä¢ The Quick Add entry now supports emojis ü§©
 ‚Ä¢ The Task Editor now provides a searchable ‚Äútag picker‚Äù widget.
 ‚Ä¢ The ‚ÄúTask Reaper‚Äù allows deleting old closed tasks for increased performance.
   Previously available as a plugin, it is now a built-in feature,
   available in the Preferences dialog.
 ‚Ä¢ The Quick Deferral (previously, the ‚ÄúDo it Tomorrow‚Äù plugin) is now built-in.
   It is now possible to defer multiple tasks at once to common upcoming days
   or to a custom date.
 ‚Ä¢ In the unlikely case where GTG encounters a problem opening your data file,
   it will automatically attempt recovery from a previous backup snapshot
   and let you know about it.

Main window (‚ÄúTask Browser‚Äù) improvements
 ‚Ä¢ The menu bar has been replaced by a menu button.
   Non-contextual actions have been moved to the main menu button.
 ‚Ä¢ Searching is now handled through a dedicated Search Bar
   that can be toggled on and off with the mouse,
   or the Ctrl+F keyboard shortcut.
 ‚Ä¢ The ‚ÄúWorkview‚Äù mode has been renamed to the ‚ÄúActionable‚Äù view.
 ‚Ä¢ Sorting tasks by title is now case-insensitive and ignores @ characters
   https://github.com/getting-things-gnome/gtg/issues/375
 ‚Ä¢ Start/Due/Closed dates now display as properly translated in the Task Browser
   https://github.com/getting-things-gnome/gtg/issues/357
 ‚Ä¢ In the right-click context menus, more start/due dates choices are available,
   including common upcoming dates and a custom date picker
   https://github.com/getting-things-gnome/gtg/issues/244

Task Editor improvements
 ‚Ä¢ The Calendar date picker pop-up widgets have been improved
   https://github.com/getting-things-gnome/gtg/pull/230
 ‚Ä¢ The Task Editor now tries to place newly created windows more logically
   https://github.com/getting-things-gnome/gtg/issues/287
 ‚Ä¢ The title (first line of a task) has been changed to a neutral black header,
   so that it doesn‚Äôt look like a hyperlink.

Documentation Updates
 ‚Ä¢ The user manual has been rewritten, reorganized, and updated with new images
   https://github.com/getting-things-gnome/gtg/issues/243
 ‚Ä¢ Contributor documentation was rewritten to make it easier to get involved
   and to clarify project contribution guidelines.
   https://github.com/getting-things-gnome/gtg/issues/200
   https://fortintam.com/blog/improving-developer-experience-and-attracting-open-source-project-contributors/

Backend and Code Quality improvements
 ‚Ä¢ Updates were made to overall code quality to reduce barriers to contribution
   https://github.com/getting-things-gnome/gtg/issues/237
 ‚Ä¢ The code has been ported to use GtkApplication,
   resulting in simpler and more robust UI code overall.
 ‚Ä¢ GtkBuilder/Glade ‚Äú.ui‚Äù files have been regrouped into one location.
 ‚Ä¢ Reorganization of various .py files for consistency.
 ‚Ä¢ The debugging/logging system has been simplified.
 ‚Ä¢ Various improvements to the test suite.
 ‚Ä¢ The codebase is mostly PEP8-compliant.
 ‚Ä¢ We relaxed the PEP8 max line length convention to 100 cols for readability,
   because this is not the nineties anymore.
 ‚Ä¢ Support is available for Tox, for testing automation within virtualenvs
 ‚Ä¢ The application‚Äôs translatable strings have been reviewed and harmonized,
   to ensure the entire application is translatable.
 ‚Ä¢ Application CSS has been moved to its own file
   https://github.com/getting-things-gnome/gtg/pull/229
 ‚Ä¢ GTG now provides an ‚ÄúAppData‚Äù (FreeDesktop AppStream metadata) file
   to properly present itself in distro-agnostic software-centers.
 ‚Ä¢ The Meson build system is now supported
   https://github.com/getting-things-gnome/gtg/pull/315
     ‚Ä¢ The development version‚Äôs launch script now allows running
       with various languages, using the LANG environment variable for example.
     ‚Ä¢ Appdata and desktop files are named based on the chosen Meson profile
       https://github.com/getting-things-gnome/gtg/pull/349
     ‚Ä¢ Depending on the Meson profile, the HeaderBar style changes dynamically
       to indicate when run in a dev environment, such as GNOME Builder
       https://github.com/getting-things-gnome/gtg/issues/341

In order to bring this release out of the door, some plugins (and all
synch services) have been disabled and are awaiting adoption by new
contributors to test and maintain them.
See https://github.com/getting-things-gnome/gtg/issues/222
Please contribute to maintain your favorite plugin. Likewise, we had to remove
the DBus module (and would welcome help to bring it back into a better shape,
for those who want to control the app via DBus).


==============
Older releases
==============
They predate this file, and documenting them here is a questionable endeavor.
See https://wiki.gnome.org/Apps/GTG/release_names for historical info.
